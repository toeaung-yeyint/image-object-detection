{"mappings":"ACCA,MAAM,EAAO,SAAS,cAAc,SAE9B,EAAc,SAAS,cAAc,iBAErC,EAAS,SAAS,cAAc,oBAEtC,EAAK,iBAAiB,SAAU,AAAC,IAChC,EAAE,iBAEF,EAAO,UAAY,GAEnB,IAAM,EAAQ,SAAS,cAAc,iBAE/B,EAAc,SAAS,cAAc,OAErC,EAAiB,IAAI,eAAe,UAE1C,CAAA,EAAY,MAAM,WAAa,SAE/B,IAAM,EAAU,SAAS,cAAc,IACvC,CAAA,EAAQ,UAAY,cACpB,EAAQ,UAAU,IAAI,WACtB,EAAO,OAAO,GAKd,EAAe,OAAO,GAAa,KAAK,AAAC,IACxC,IAAM,EAAkB,SAAS,cAAc,KAC/C,EAAgB,UAAU,IAAI,oBAC9B,EAAgB,UAAY,CAAC,kBAAkB,EAAE,EAAQ,OAAO,CAAC,CACjE,IAAM,EAAa,SAAS,cAAc,MAC1C,EAAO,OAAO,GACd,EAAO,OAAO,GACd,EAAQ,QAAQ,AAAC,IAChB,EAAW,mBACV,YACA,CAAC,WAAW,EAAE,EAAO,MAAM,qBAAqB,EAAE,KAAK,MACtD,AAAoB,IAApB,EAAO,YACN,MAAM,CAAC,EAEV,IAAM,EAAO,SAAS,cAAc,QACpC,EAAK,UAAU,IAAI,aACnB,EAAK,UAAY,CAAC,EAAE,EAAO,MAAM,CAAC,EAAE,KAAK,MACxC,AAAoB,IAApB,EAAO,YACN,CAAC,CAAC,CACJ,EAAK,MAAM,MAAQ,CAAC,EAAE,EAAO,MAAM,EAAE,CAAC,CACtC,EAAK,MAAM,OAAS,CAAC,EAAE,EAAO,OAAO,EAAE,CAAC,CACxC,EAAK,MAAM,KAAO,CAAC,EAAE,EAAO,EAAE,EAAE,CAAC,CACjC,EAAK,MAAM,IAAM,CAAC,EAAE,EAAO,EAAE,EAAE,CAAC,CAChC,EAAO,OAAO,EACf,GACA,SAAS,cAAc,YAAY,SACnC,EAAY,MAAM,WAAa,SAChC,GAEA,EAAO,OAAO,GAEd,EAAY,IAAM,IAAI,gBAAgB,EAAM,KAAK,CAAC,EAAE,EACpD,EAAY,UAAU,IAAI,gBAE1B,EAAM,MAAQ,EACf,GAGA,EAAY,iBAAiB,QAAS,KAErC,IAAM,EAAQ,SAAS,cAAc,gBAErC,CAAA,EAAM,MAAQ,GAEd,EAAO,UAAY,EACpB","sources":["<anon>","src/index.js"],"sourcesContent":["// select form element\nconst form = document.querySelector(\".form\");\n//  select reset button\nconst resetButton = document.querySelector(\".reset-button\");\n// select result section element\nconst result = document.querySelector(\".image-container\");\n// event listener to handle the event when a user clicks on detect button\nform.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    // remove any child element under result section element\n    result.innerText = \"\";\n    // select the image\n    const image = document.querySelector(\"#image-upload\");\n    // create img element\n    const resultImage = document.createElement(\"img\");\n    // create an object detector using cocossd model\n    const objectDetector = ml5.objectDetector(\"cocossd\");\n    // hide the image until all the objects are detected\n    resultImage.style.visibility = \"hidden\";\n    // show loading sign when the object are getting detected\n    const example = document.createElement(\"p\");\n    example.innerText = \"Loading ...\";\n    example.classList.add(\"loading\");\n    result.append(example);\n    // detect objects from image using object detector,\n    // once the image has all its detected objects, remove loading element\n    // draw squre boxes around the detected objects on desktop devices\n    // show detected objects as a list on mobile devices\n    objectDetector.detect(resultImage).then((objects)=>{\n        const detectedObjects = document.createElement(\"p\");\n        detectedObjects.classList.add(\"detected-objects\");\n        detectedObjects.innerText = `Detected objects: ${objects.length}`;\n        const objectList = document.createElement(\"ul\");\n        result.append(detectedObjects);\n        result.append(objectList);\n        objects.forEach((object)=>{\n            objectList.insertAdjacentHTML(\"beforeend\", `<li>label: ${object.label} | confidence score: ${Math.round(object.confidence * 100)}%</li>`);\n            const span = document.createElement(\"span\");\n            span.classList.add(\"squre-box\");\n            span.innerText = `${object.label}|${Math.round(object.confidence * 100)}%`;\n            span.style.width = `${object.width}px`;\n            span.style.height = `${object.height}px`;\n            span.style.left = `${object.x}px`;\n            span.style.top = `${object.y}px`;\n            result.append(span);\n        });\n        document.querySelector(\".loading\").remove();\n        resultImage.style.visibility = \"visible\";\n    });\n    // insert result image under result element\n    result.append(resultImage);\n    // convert image object into string for src attribute\n    resultImage.src = URL.createObjectURL(image.files[0]);\n    resultImage.classList.add(\"result-image\");\n    // remove the value from the image input field\n    image.value = \"\";\n});\n// event listener to handle the event when a user clicks on reset button\nresetButton.addEventListener(\"click\", ()=>{\n    // select image input field\n    const image = document.querySelector(\"#image-upload\");\n    // remove the value from the input field\n    image.value = \"\";\n    // remove everything inside image-container element\n    result.innerText = \"\";\n});\n\n//# sourceMappingURL=index.60cffe43.js.map\n","// select form element\r\nconst form = document.querySelector(\".form\");\r\n//  select reset button\r\nconst resetButton = document.querySelector(\".reset-button\");\r\n// select result section element\r\nconst result = document.querySelector(\".image-container\");\r\n// event listener to handle the event when a user clicks on detect button\r\nform.addEventListener(\"submit\", (e) => {\r\n\te.preventDefault();\r\n\t// remove any child element under result section element\r\n\tresult.innerText = \"\";\r\n\t// select the image\r\n\tconst image = document.querySelector(\"#image-upload\");\r\n\t// create img element\r\n\tconst resultImage = document.createElement(\"img\");\r\n\t// create an object detector using cocossd model\r\n\tconst objectDetector = ml5.objectDetector(\"cocossd\");\r\n\t// hide the image until all the objects are detected\r\n\tresultImage.style.visibility = \"hidden\";\r\n\t// show loading sign when the object are getting detected\r\n\tconst example = document.createElement(\"p\");\r\n\texample.innerText = \"Loading ...\";\r\n\texample.classList.add(\"loading\");\r\n\tresult.append(example);\r\n\t// detect objects from image using object detector,\r\n\t// once the image has all its detected objects, remove loading element\r\n\t// draw squre boxes around the detected objects on desktop devices\r\n\t// show detected objects as a list on mobile devices\r\n\tobjectDetector.detect(resultImage).then((objects) => {\r\n\t\tconst detectedObjects = document.createElement(\"p\");\r\n\t\tdetectedObjects.classList.add(\"detected-objects\");\r\n\t\tdetectedObjects.innerText = `Detected objects: ${objects.length}`;\r\n\t\tconst objectList = document.createElement(\"ul\");\r\n\t\tresult.append(detectedObjects);\r\n\t\tresult.append(objectList);\r\n\t\tobjects.forEach((object) => {\r\n\t\t\tobjectList.insertAdjacentHTML(\r\n\t\t\t\t\"beforeend\",\r\n\t\t\t\t`<li>label: ${object.label} | confidence score: ${Math.round(\r\n\t\t\t\t\tobject.confidence * 100\r\n\t\t\t\t)}%</li>`\r\n\t\t\t);\r\n\t\t\tconst span = document.createElement(\"span\");\r\n\t\t\tspan.classList.add(\"squre-box\");\r\n\t\t\tspan.innerText = `${object.label}|${Math.round(\r\n\t\t\t\tobject.confidence * 100\r\n\t\t\t)}%`;\r\n\t\t\tspan.style.width = `${object.width}px`;\r\n\t\t\tspan.style.height = `${object.height}px`;\r\n\t\t\tspan.style.left = `${object.x}px`;\r\n\t\t\tspan.style.top = `${object.y}px`;\r\n\t\t\tresult.append(span);\r\n\t\t});\r\n\t\tdocument.querySelector(\".loading\").remove();\r\n\t\tresultImage.style.visibility = \"visible\";\r\n\t});\r\n\t// insert result image under result element\r\n\tresult.append(resultImage);\r\n\t// convert image object into string for src attribute\r\n\tresultImage.src = URL.createObjectURL(image.files[0]);\r\n\tresultImage.classList.add(\"result-image\");\r\n\t// remove the value from the image input field\r\n\timage.value = \"\";\r\n});\r\n\r\n// event listener to handle the event when a user clicks on reset button\r\nresetButton.addEventListener(\"click\", () => {\r\n\t// select image input field\r\n\tconst image = document.querySelector(\"#image-upload\");\r\n\t// remove the value from the input field\r\n\timage.value = \"\";\r\n\t// remove everything inside image-container element\r\n\tresult.innerText = \"\";\r\n});\r\n"],"names":["form","document","querySelector","resetButton","result","addEventListener","e","preventDefault","innerText","image","resultImage","createElement","objectDetector","ml5","style","visibility","example","classList","add","append","detect","then","objects","detectedObjects","length","objectList","forEach","object","insertAdjacentHTML","label","Math","round","confidence","span","width","height","left","x","top","y","remove","src","URL","createObjectURL","files","value"],"version":3,"file":"index.60cffe43.js.map"}